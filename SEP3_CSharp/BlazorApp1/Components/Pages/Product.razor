@page "/Product"
@using System.Collections
@using BlazorApp1.Managers
@using ItemDTO = DataTransferObjects.ItemDTOs
@using DataTransferObjects
@using Entities
@using Entities.Utilities
@inject IManager Manager
@inject NavigationManager NavigationManager



@if (Items == null)
{
    <h3>No products can be displayed right now, sorry for the inconvenience</h3>
}
else
{
    <h3 class="mb-5">Products</h3>
    var productCount = Items.Count();
    @if (productCount > 0)
    {
        const int itemsPerRow = 4;
        var productsRowList = new List<ItemDTO>();

        @for (int i = 0; i < productCount; i++)
        {
            productsRowList = Items.Skip(i * itemsPerRow).Take(itemsPerRow).ToList();
            <div class="row mt-3">
                <DisplayProducts Products="@productsRowList"></DisplayProducts>
            </div>
        }
    }
}


@code 
{
    
    private IEnumerable<ItemDTOs> Items{ get; set; }
    private List<Category> categories;
    

    protected override async Task OnInitializedAsync()
    {
        Items = await Manager.GetItemsAsync();
        categories = Manager.GetCategoriesAsync().Result.ToList();
        
    }
}