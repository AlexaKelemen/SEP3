@using BlazorApp1.Managers
@using BlazorApp1.Services.Contracts;
@using Entities;
@using Entities.Utilities
@using Microsoft.AspNetCore.Components;
@using Microsoft.JSInterop;
@inject IManager Manager;
@inject IJSRuntime Js
@inject NavigationManager NavigationManager
@page "/ShoppingCart"

<PageTitle>ShoppingCart</PageTitle>


@if (CartItems != null && CartItems.Count > 0)
{
    <h3 class="mb-5">Shopping Cart</h3>
    <div class="row mb-5">
        <div class="col-md-9">

            @foreach (var item in CartItems)
            {
                var cartItem = item.Key;

                <div class="row mb-4">
                    <div class="col-md-4">
                        <img src="@cartItem.ImageURL" alt="@cartItem.Name" class="img-thumbnail"/>
                    </div>
                    <div class="col-md-8">
                        <h5>@cartItem.Name</h5>
                        <p>@cartItem.Description</p>
                        <p>Price: <b>@cartItem.Price.ToString("C")</b></p>
                        <p>Quantity:</p>
                        <input type="number" value="@item.Value"
                               @oninput="@(e => UpdateQuantity(item.Key, Convert.ToInt32(e.Value)))"/>
                        <button class="btn btn-info btn-sm"
                                @onclick="(() => UpdateQuantity(item.Key, cartItem.Quantity))">
                            Update Qty
                        </button>
                        <button class="btn btn-danger sm"
                                @onclick="(() => RemoveFromCart(item.Key))">
                            <i class="fa fa-trash"></i> Remove
                        </button>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-3">
            <h5>Cart Summary</h5>
            <div class="mt-2">
                <div>Total - (&nbsp;
                    <b>@CartTotal.ToString("C")</b>
                    )
                </div>
                <button class="btn btn-success" @onclick="Checkout">
                    <span class="oi oi-credit-card"></span>&nbsp; Proceed to Checkout
                </button>
            </div>
        </div>
    </div>
}
else
{
    <h4>There are currently no items in your shopping cart</h4>
}
@code
{
    private Dictionary<Item, int> CartItems;

    private decimal CartTotal => (decimal)CartItems.Sum(entry => entry.Key.Price * entry.Value);

    protected override async Task OnInitializedAsync()
    {
        CartItems = Manager.GetCartItems();
    }

    private void UpdateQuantity(Item item, int quantity)
    {
        if (CartItems.ContainsKey(item) && quantity > 0)
        {
            CartItems[item] = quantity;
        }
        
    }

    private void RemoveFromCart(Item item)
    {
        if (CartItems.ContainsKey(item))
        {
            CartItems.Remove(item);
        }
    }


    private void Checkout()
    {
        NavigationManager.NavigateTo("/Checkout");
        //CartItems.Clear();
        //StateHasChanged();
    }
}
